name: build

on: push
jobs:
  push:
    name: push_to_registry_gcr
    runs-on: self-hosted

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      
      - uses: actions/checkout@v4
      - id: 'auth' 
        name:  authenticate gke 
        uses: 'google-github-actions/auth@v2'
        with:
         
          workload_identity_provider: 'projects/499613830332/locations/global/workloadIdentityPools/deel/providers/github'
          service_account: 'github-actions-sa@deel-home-task-1.iam.gserviceaccount.com'
      - name: Install gke-gcloud-auth-plugin
        run: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt update
            sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin kubectl
            export USE_GKE_GCLOUD_AUTH_PLUGIN=True
      - name: 'setup cloud sdk'
       
        run: |
            gcloud config set project ${{ secrets.GKE_PROJECT }}
            gcloud container clusters get-credentials "deel-cluster" --zone us-east5-a
      
     
      - uses: eladtamari/deel-home-work@v5-rc1
        with:
            # gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }} # can be base64 encoded or plain text || not needed if you use google-github-actions/auth
            registry: gcr.io
            project_id: ${{ secrets.GKE_PROJECT }}
            image_name: deel-reg
            image_tag: latest,v1
            dockerfile: ../
            context: .
            target: build
    
      
            
              
    # name: push docker image to hub
    # runs-on: ubuntu-latest
    # steps:
    #   - name: check repository
    #     uses: actions/checkout@v4

    #   - name: login to docker registry
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{secrets.DOCKERHUB_USERNAME}}
    #       password: ${{secrets.DOCKERHUB_TOKEN}}

    #   - name: build and push docker image to registry
    #     uses: docker/build-push-action@v5
    #     with:
    #       context: ./
    #       push: true
    #       tags: 0254/deel-app:latest
    #       build-args: |
    #         db_user=${{secrets.DB_USER}}
    #         db_pass=${{secrets.DB_PASS}}
         

  deploy:
    needs: push
    runs-on: self-hosted

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      
      - uses: actions/checkout@v4
      - id: 'auth' 
        name:  authenticate gke 
        uses: 'google-github-actions/auth@v2'
        with:
         
          workload_identity_provider: 'projects/499613830332/locations/global/workloadIdentityPools/deel/providers/github'
          service_account: 'github-actions-sa@deel-home-task-1.iam.gserviceaccount.com'
      - name: Install gke-gcloud-auth-plugin
        run: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt update
            sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin kubectl
            export USE_GKE_GCLOUD_AUTH_PLUGIN=True
      - name: 'setup cloud sdk'
       
        run: |
            gcloud config set project ${{ secrets.GKE_PROJECT }}
            gcloud container clusters get-credentials "deel-cluster" --zone us-east5-a
      
      
      - name: Verify Kubernetes Context
        run: |
          kubectl config current-context || echo "Context not set!"
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - name: Deploy Helm Chart
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update
          helm upgrade --install my-release ./new-deploy --namespace default --kube-context $(kubectl config current-context) --set db_user=${{secrets.DB_USER}} --set db_pass=${{secrets.DB_PASS}}
          
          helm install my-mongodb-2 bitnami/mongodb --set auth.username=${{secrets.DB_USER}} --set auth.password=${{secrets.DB_PASS}} --set auth.database=deel

          kubectl port-forward --namespace default svc/my-mongodb-2 27017:27017 &
          mongosh --host 127.0.0.1 --authenticationDatabase ${{secrets.DB_USER}} -p ${{secrets.DB_PASS}} &
          
          


